1. Brute force
- initialize max = 0
- iterate over the array a with a with index i
- initialize 2 variables sum = 0 and temp = [i]
- then create a nested loop with index j = i + 2 and a step of 2
- append index to the temp list and add value of a[j] to sum
- check if sum > max; assign sum to max and temp to ans



2. Optimal solution
- Given that if we take the value at index i, then we cannot take the consecutive index (i + 1) next. So the indexes that we can take are i, i + 2, i+ 4, i + 6, ... making them either odd or even numbers starting from i.
- Hence I created 2 variables marks_even and marks_odd to sum the numbers for odd and even indexes

starting at i = 0; marks_even = marks_even + a[i], and accumulate values at even indexes (j = 2, 4, 6, 8, ...) and store the sum in marks_even
starting at i = 1; marks_odd = marks_odd + a[i], and accumulate values at even indexes (j = 3, 5, 7, 9, ...) and store the sum in marks_odd

- After computing the total marks (marks_even, marks_odd) for even and odd indexes, After computing the total marks for even and odd indexes, we compare marks_even and marks_odd to find the maximum value. 
- Depending on whether marks_even or marks_odd is greater, we append all the indexes starting from 0 or 1 with a step of 2 to the ans array